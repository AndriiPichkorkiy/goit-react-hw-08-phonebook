{"version":3,"file":"static/js/848.2743950d.chunk.js","mappings":"yMA6DA,UAtDe,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,OACI,+BACI,SAAC,KAAD,CACIC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAaf,OAZKD,EAAOH,MAGP,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMdG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAChCF,EAAOH,SAAW,yCAFlBG,EAAOH,SAAW,WAIfG,GAEXG,SAAU,SAACJ,EAAD,GAAgC,IAArBK,EAAoB,EAApBA,cACjBX,GAASY,EAAAA,EAAAA,IAAON,IAChBK,GAAc,IApBtB,SAwBK,gBAAGE,EAAH,EAAGA,aAAH,OACG,UAAC,IAAD,YACI,UAAC,IAAD,YACI,kBAAOC,QAAQ,QAAf,sBACA,SAAC,KAAD,CAAOC,aAAa,KAAKC,GAAG,QAAQC,KAAK,QAAQC,KAAK,WACtD,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,YAEzC,UAAC,IAAD,YACI,kBAAOL,QAAQ,WAAf,yBACA,SAAC,KAAD,CAAOC,aAAa,MAAMC,GAAG,WAAWC,KAAK,WAAWC,KAAK,cAC7D,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,YAE5C,SAAC,IAAD,WACI,mBAAQF,KAAK,SAASG,SAAUP,EAAhC,iC,iHC7CfQ,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,mKASVE,EAAaF,EAAAA,QAAAA,IAAH","sources":["pages/SignIn.jsx","styled/Formik.styled.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\n\nimport { signin } from '../redux/auth/auth-operations';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { FormStyled, InputGroup } from \"styled/Formik.styled\";\n\n\nconst SignIn = () => {\n    const dispatch = useDispatch();\n    return (\n        <>\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    if (!values.password) {\n                        errors.password = 'Required';\n                    } else if (values.password.length < 6) {\n                        errors.password = 'Length have to be more than 6 symbols';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    dispatch(signin(values));\n                    setSubmitting(false);\n\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <FormStyled>\n                        <InputGroup>\n                            <label htmlFor=\"email\">Email: </label>\n                            <Field autoComplete=\"on\" id=\"email\" type=\"email\" name=\"email\" />\n                            <ErrorMessage name=\"email\" component=\"div\" />\n                        </InputGroup>\n                        <InputGroup>\n                            <label htmlFor=\"password\">Password: </label>\n                            <Field autoComplete=\"off\" id=\"password\" type=\"password\" name=\"password\" />\n                            <ErrorMessage name=\"password\" component=\"div\" />\n                        </InputGroup>\n                        <InputGroup>\n                            <button type=\"submit\" disabled={isSubmitting}>\n                                Sign in\n                            </button>\n                        </InputGroup>\n\n                    </FormStyled>\n                )}\n            </Formik>\n\n        </>\n    );\n}\n\nexport default SignIn;","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  padding: 2rem 2rem;\n\n  max-width: 20rem;\n  background-color: #aaaaaaaa;\n  margin: 0 auto;\n  box-shadow: #aaaaaa 0px 0px 16px 16px;\n`;\n\nexport const InputGroup = styled.div`\n  /* text-align: center; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 3rem;\n`;\n"],"names":["dispatch","useDispatch","initialValues","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","signin","isSubmitting","htmlFor","autoComplete","id","type","name","component","disabled","FormStyled","styled","Form","InputGroup"],"sourceRoot":""}