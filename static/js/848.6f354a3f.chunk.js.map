{"version":3,"file":"static/js/848.6f354a3f.chunk.js","mappings":"yMA6DA,UAtDe,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,OACI,+BACI,SAAC,KAAD,CACIC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAaf,OAZKD,EAAOH,MAGP,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMdG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAChCF,EAAOH,SAAW,yCAFlBG,EAAOH,SAAW,WAIfG,GAEXG,SAAU,SAACJ,EAAD,GAAgC,IAArBK,EAAoB,EAApBA,cACjBX,GAASY,EAAAA,EAAAA,IAAON,IAChBK,GAAc,IApBtB,SAwBK,gBAAGE,EAAH,EAAGA,aAAH,OACG,UAAC,IAAD,YACI,UAAC,IAAD,YACI,kBAAOC,QAAQ,QAAf,sBACA,SAAC,KAAD,CAAOC,GAAG,QAAQC,KAAK,QAAQC,KAAK,WACpC,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,YAEzC,UAAC,IAAD,YACI,kBAAOJ,QAAQ,WAAf,yBACA,SAAC,KAAD,CAAOC,GAAG,WAAWC,KAAK,WAAWC,KAAK,cAC1C,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,YAE5C,SAAC,IAAD,WACI,mBAAQF,KAAK,SAASG,SAAUN,EAAhC,iC,iHC7CfO,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,mKASVE,EAAaF,EAAAA,QAAAA,IAAH","sources":["pages/SignIn.jsx","styled/Formik.styled.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\n\r\nimport { signin } from '../redux/auth/auth-operations';\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport { FormStyled, InputGroup } from \"styled/Formik.styled\";\r\n\r\n\r\nconst SignIn = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.email) {\r\n                        errors.email = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = 'Invalid email address';\r\n                    }\r\n                    if (!values.password) {\r\n                        errors.password = 'Required';\r\n                    } else if (values.password.length < 6) {\r\n                        errors.password = 'Length have to be more than 6 symbols';\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    dispatch(signin(values));\r\n                    setSubmitting(false);\r\n\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <FormStyled>\r\n                        <InputGroup>\r\n                            <label htmlFor=\"email\">Email: </label>\r\n                            <Field id=\"email\" type=\"email\" name=\"email\" />\r\n                            <ErrorMessage name=\"email\" component=\"div\" />\r\n                        </InputGroup>\r\n                        <InputGroup>\r\n                            <label htmlFor=\"password\">Password: </label>\r\n                            <Field id=\"password\" type=\"password\" name=\"password\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                        </InputGroup>\r\n                        <InputGroup>\r\n                            <button type=\"submit\" disabled={isSubmitting}>\r\n                                Sign in\r\n                            </button>\r\n                        </InputGroup>\r\n\r\n                    </FormStyled>\r\n                )}\r\n            </Formik>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import styled from 'styled-components';\r\nimport { Form } from 'formik';\r\n\r\nexport const FormStyled = styled(Form)`\r\n  padding: 2rem 2rem;\r\n\r\n  max-width: 20rem;\r\n  background-color: #aaaaaaaa;\r\n  margin: 0 auto;\r\n  box-shadow: #aaaaaa 0px 0px 16px 16px;\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  /* text-align: center; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 3rem;\r\n`;\r\n"],"names":["dispatch","useDispatch","initialValues","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","signin","isSubmitting","htmlFor","id","type","name","component","disabled","FormStyled","styled","Form","InputGroup"],"sourceRoot":""}